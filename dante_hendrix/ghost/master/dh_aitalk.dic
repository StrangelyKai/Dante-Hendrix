/***
 *               _____ _______       _      _  __
 *         /\   |_   _|__   __|/\   | |    | |/ /
 *        /  \    | |    | |  /  \  | |    | ' / 
 *       / /\ \   | |    | | / /\ \ | |    |  <  
 *      / ____ \ _| |_   | |/ ____ \| |____| . \ 
 *     /_/    \_\_____|  |_/_/    \_\______|_|\_\
 *                                               
 *                                               
 */

//--AiTalk
//Leave this alone.
//Advanced users, this is mostly setting up whether or not dialogue is in a chain before it displays. Again, you can leave it alone unless you want to screw around with chains for some strange reason.

AiTalk
 {
	if RAND(100) < communicateratio
 	{
 		StartCommunicate
	}
 	else
	{
 		if mikireflag == 0
		{
			if CHAIN.IDName == "" {
 				lastTalk = RandomTalk
			}
			else {
				lastTalk = ChainTalk
			}
			lastTalk
		}
 		else
		{ 
		MikireTalk
 		}
	}
 }


//--RandomTalk 

//*********************Advanced User Info*******************************
//You CAN link to other pools of dialogue in RandomTalk using envelopes/functions, such as %(teatalk) to pull from a pool of dialogue about tea. Then you'd just add that line in among the other dialogue in here with %(teatalk). However, this vastly lowers the probability of dialogue in that function being called. If teatalk only gets called 1/5 times, and it has 10 pieces of dialogue in there, then you're only getting... uh... god, I'm bad at fractions... 1...50th? a chance that a certain teatalk line will appear. LOOK THE GIST IS THAT THE PROBABILITY GETS LOW. This applies to any kind of dialogue in a conditional. A simpler example would be if you have one piece of normal dialogue, and one piece that's an if check that has four pieces of dialogue in there. You'd end up with a 50% chance to get that normal dialogue, and a 50% chance for ONE of the other four pieces of dialogue... which makes the odds of seeing any specific line in that special dialogue that much lower.

//You can't do things like put OnSystemBoot or something in RandomTalk. You could use \![raise] to pull something though, although I'd be careful about it. More on these kind of things and conditionals in general in the coding page on the walkthrough.

//If you split up RandomTalk with if/else checks, then you can redirect in an If to another function, like... if chargermode == "on" { ChargerChatting } else {normal random talk dialogue}. This would redirect the random dialogue to ChargerChatting instead. You can't just throw a function into RandomTalk directly though, like "dialogue 1" "dialogue 2" OnFunctionname "dialogue 3", that kind of thing. You'll have to split it off into its own if or point to it with an envelope.

//You can do multiple ifs in RandomTalk if required... like an if for if a character is asleep, or if a third character is present, or if they're having a nervous breakdown, or if they're sulking. It depends! You can add a bunch of checks leading to specialized pools if you want. Just make sure you leave some normal dialogue in the last else for RandomTalk (unless you want to redirect that somewhere else with an envelope too... although that seems a bit redundant, honestly.)
//***********************************************************************

RandomTalk : nonoverlap
{
	//Normal Dialogue
	// if GooglyEyed == 1
    // {
     // "\0* (He takes off the googly eyes.)\s[0]\w8\w8\w4\c\s[0]"
    // }    
    // else; ""
    // --
	
	//General
	"\0\s[112]So.\w8.\w8.\w8 wanna do anything?\e"
	"\0\s[102]Don't work too hard, 'kay?\e"
	//"\0\s[0]ReplaceDialogue\e"
	
	//About Sage
	"\0\s[119]I should remind Sage of the test coming up next week.\e"
	
	//About Gaven
	
	//About Rory
	"\0\s[107]I hope Rory'll run the coffee shop ok while I'm gone.\e"
	"\0\s[107]I wonder if Rory'll let me borrow his switch later. I wanna play the new pokemon game.\e"
	
	//About Rose
	"\0\s[0]I hope Rose is keeping herself entertained \s[107]and not causing too much trouble.\e"
	
	
	//If/Else
	
	if RAND(100) < 2 && month == 10 && day == 13
	{
		"\0\s[105]Did you know that the dev's birthday is today?\e"
	}
	/*
	if RAND(1000) == 13
	{
		"\0\s[118][ H 0 T 51NGL35 1N Y0UR 4R34 ! ! ! ]\w4\c\s[0]Huh?\e:eval=lastTalk=''"
	}
	*/
	if timeslot == "earlymorning" // 5 to 8
	{
		"\0\s[112]What are you doing up so early anyway?\e"
		
		"\0\s[108]I usually don't get up until 10...\w8\s[0] Hm?\w8\w8\nYeah, I'm a high school student,\w8\s[112] so what?\e"
	}
	if timeslot == "morning" // 9 to 11
	{
		//"\0\s[0]ReplaceDialogue\e"
		
		//"\0\s[0]ReplaceDialogue\e"
	}
	if timeslot == "lunch" // 12 to 2
	{
		"\0\s[112]What are you having for lunch mate?\w8\s[0] I always have cheese and vegemite sandwiches.\e"
		
		//"\0\s[0]ReplaceDialogue\e"
	}
	if timeslot == "afternoon" // 3 to 5
	{
		//"\0\s[0]ReplaceDialogue\e"
		
		//"\0\s[0]ReplaceDialogue\e"
	}
	if timeslot == "evening" // 6 to 8
	{
		//"\0\s[8]ReplaceDialogue\e"
		
		//"\0\s[0]ReplaceDialogue\e"
	}
	if timeslot == "latenight" // 9 to 12
	{
		"\0\s[107]I wonder if this time is considered late for you\w8\w8, \s[112]or if you're usually up at this time.\e"
		
	    //"\0\s[0]ReplaceDialogue\e"
	}
	if timeslot == "midnight" // 12 to 5
	{
		//"\0\s[0]ReplaceDialogue\e"
		
		//"\0\s[0]ReplaceDialogue\e"
	}
	

//--End of RandomTalk
}

//Keeps track of if an hour has passed. 
HourCheck
{
if passmin >= 59
	{
		passmin = 0
		passhour = passhour + 1
	}
}


OnMinuteChange //This is what will trigger time-based dialogue for your Ghost.
 {
	HourCheck //checks to see if an hour has passed, ignore it
	--
 	if minute == 0 //These ifs will check what time it is. Here, it's seeing if the minute equals zero...
	{
 		if hour == 12 //And the hour equals 12, meaning it's noon. You can change this to some other hour if you want.
		{
 			"\0\s[0]It's noon.\e"
			//Replace with appropriate dialogue as you want.
		}
 		elseif hour == 0 //If the hour is zero, aka midnight. Again, you can change this to whatever hour you want to check for. This section is flexible! You can also add more elseifs if you want to check for other hours.
		{
 			"\0\s[0]It's midnight.\e"
 			
			//Then replace the dialogue with what's appropriate.
		}
		else
		{
			"\0\s[0]It's %(hour12)'o clock.\e"
			//%(hour12) stores the time. This is a general top of the hour notification. I personally like this because it helps me keep track of time when I've been working on something, so when a ghost is all "Hey it's 3 o clock" I can be like woah really when did that happen. If you think this is annoying though, you can just delete this bit of dialogue to leave this else statement blank, or leave "" in here instead.
		}
	}
	
	//Don't touch this part.
	elseif mikireflag == 1
 	{
 		MikireTalk
	}
 }

//--OnSecondChange
//Like the above, this handles what happens every time a second goes by. Most of this you will not have to touch.

OnSecondChange
 {
	if passsec == 59
 		{
	 	passsec = 0
 		passmin = passmin + 1
		}
 	else
 		{
	 	passsec = passsec + 1
		}
	if mikireflag == 0 && reference1 == 1 //Dialogue for putting them off the screen. You could make this a unique line if you wanted (Like "Hey! What are you doing?"), and have MikireTalk below be for if they continue to be offscreen ("Why are you leaving me out here? Help!" for example). I'll add an example bit of dialogue and comment it out, you can uncomment it and use it if you like, or just leave it out and use MikireTalk below.
	{
		//"\0\s[0]You've moved me off screen."
		
		MikireTalk
	}
	if mikireflag == 1 && reference1 == 0 //Dialogue for coming back on the screen
	{
		EndMikireTalk
	}
	mikireflag = reference1 //reference1 is if the ghost is offscreen or not
	if reference2 == 1
	{
 		//This dialogue is for when the two characters are overlapping each other. If you don't want your characters to care, you can just leave this blank.
		
 		""
		
	}
 }

 //---- MikireTalk ---------------------------------------------------------------------
 //MikireTalk is dialogue for when your main character is off-screen.
 
MikireTalk
 {
	"\0\s[0]I'm off the screen. You can push Ctrl-Shift-F12 to bring me back."
 }

 //----EndMikireTalk--------------------------------------------------------------------
 //For after you bring the character back on screen.
 
EndMikireTalk
 {
	"\0\s[0]I'm no longer off the screen.\e"
 }


//**** OnSurfaceRestore *****************************************************************
//OnSurfaceRestore is a handy function. What this does is that after a short period of time, the ghost will go back to its default pose, so you won't have a ghost stuck in one expression for too long. It's also helpful if you've made one of the characters disappear using \s[-1] in dialogue and didn't bring them back at the end of it. This will do that for you.
//I'm going to comment out the if/else statements in this because the circumstances in which they'd come up seem pretty unlikely and unnecessary if you're just going to be making a simple ghost. You can just leave this function alone and move on if you want. However, if you do want to use them, just uncomment the lines by deleting the slashes and fill in the info as you need.

//*********************Advanced User Info*******************************
//You can put if statements in OnSurfaceRestore to make exceptions for certain poses, or to make sure that once they're in a certain pose, they stay in that pose. For example, if you turn my Hunter and Smoker ghost into eggplants, there's a check for the their eggplant pose numbers to make sure they STAY eggplants when OnSurfaceRestore is called.
//You can also use OnSurfaceRestore to clean up things that might be left on the screen, primarily from using p[number]\s[] to call up other objects or characters. Just make sure to add a p[number]\s[-1] to OnSurfaceRestore, and that should get rid of it each time the ghost cleans itself up.
//***********************************************************************

OnSurfaceRestore
 {
	"\0\s[0]\1\s[10]\e"
 }

 
 //--OnKeyPress
 //This defines the hotkeys your ghost will use. You can change these to whatever you want, but I don't really know why you would. I'd just leave this alone. Advanced Users can add new hotkeys attached to whatever function if you want.
 
OnKeyPress
{
	if reference0 == "t"
	{
	OnAiTalk
	}
	elseif reference0 == "r"
	{
	OnLastTalk
	}
	elseif reference0 == "f1"
	{
	"\![open,readme]"
	}
}